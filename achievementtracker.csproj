<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard21</TargetFramework>
    <AssemblyName>achievementtracker</AssemblyName>
    <Description></Description>
    <RootNamespace>achievementtracker</RootNamespace>
    <Nullable>disable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>10.0</LangVersion>
    <Optimize>true</Optimize>
	  <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    <RestoreAdditionalProjectSources>
      https://api.nuget.org/v3/index.json;
      https://nuget.bepinex.dev/v3/index.json
    </RestoreAdditionalProjectSources>

    <!--  SML GH Link  -->
	  <SalemModLoaderLink>https://github.com/Curtbot9000/SalemModLoader/releases/latest/download/SalemModLoader.dll</SalemModLoaderLink>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="resources\**" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="HarmonyX" Version="2.10.2" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>

    <Reference Include="Assembly-CSharp" Publicize="true">
      <HintPath>.\libs\Assembly-CSharp.dll</HintPath>
    </Reference>

    <Reference Include="BetterTOS2">
      <HintPath>..\..\..\..\..\Program Files (x86)\Steam\steamapps\common\Town of Salem 2\SalemModLoader\Mods\BetterTOS2.dll</HintPath>
    </Reference>

    <Reference Include="Unity.TextMeshPro">
      <HintPath>libs\Unity.TextMeshPro.dll</HintPath>
    </Reference>
    
    <Reference Include="UnityEngine">
      <HintPath>.\libs\UnityEngine.dll</HintPath>
    </Reference>

    <Reference Include="UnityEngine.CoreModule">
      <HintPath>.\libs\UnityEngine.CoreModule.dll</HintPath>
    </Reference>

    <Reference Include="SalemModLoader">
      <HintPath>.\libs\SalemModLoader.dll</HintPath>
    </Reference>

    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>..\..\..\..\..\Program Files (x86)\Steam\steamapps\common\Town of Salem 2\TownOfSalem2_Data\Managed\UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>

    <Reference Include="UnityEngine.InputModule">
      <HintPath>..\..\..\..\..\Program Files (x86)\Steam\steamapps\common\Town of Salem 2\TownOfSalem2_Data\Managed\UnityEngine.InputModule.dll</HintPath>
    </Reference>

    <Reference Include="UnityEngine.UI">
      <HintPath>libs\UnityEngine.UI.dll</HintPath>
    </Reference>

    <Reference Include="UnityEngine.UIModule">
      <HintPath>libs\UnityEngine.UIModule.dll</HintPath>
    </Reference>
    
  </ItemGroup>

  <Target Name="PrepareBuildFiles" AfterTargets="BeforeBuild">
    <DownloadFile SourceUrl="$(SalemModLoaderLink)" DestinationFolder="$(MSBuildThisFileDirectory)\libs" SkipUnchangedFiles="true">
      <Output TaskParameter="DownloadedFile" ItemName="Content" />
		</DownloadFile>
    
    <!-- Copy over internal libraries -->
    <Copy SourceFiles="@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/TownOfSalem2_Data/Managed/%(Identity).dll')" DestinationFolder="./libs" Condition="'$(SteamLibraryPath)' != '' And '%(Identity)' != '' And '$(OS)' == 'Windows_NT' And Exists(@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/TownOfSalem2_Data/Managed/%(Identity).dll'))" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/TownOfSalem2.app/Contents/Data/Managed/%(Identity).dll')" DestinationFolder="./libs" Condition="'$(SteamLibraryPath)' != '' And '%(Identity)' != '' And '$(OS)' != 'Windows_NT' And Exists(@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/TownOfSalem2.app/Contents/Data/Managed/%(Identity).dll'))" SkipUnchangedFiles="true" />
    
    <!-- Copy over mod dependencies -->
    <Copy SourceFiles="@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/SalemModLoader/Mods/%(Identity).dll')" DestinationFolder="./libs" Condition="'$(SteamLibraryPath)' != '' And '%(Identity)' != '' And '$(OS)' == 'Windows_NT' And Exists(@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/SalemModLoader/Mods/%(Identity).dll'))" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/TownOfSalem2.app/Contents/SalemModLoader/Mods/%(Identity).dll')" DestinationFolder="./libs" Condition="'$(SteamLibraryPath)' != '' And '%(Identity)' != '' And '$(OS)' != 'Windows_NT' And Exists(@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/TownOfSalem2.app/Contents/SalemModLoader/Mods/%(Identity).dll'))" SkipUnchangedFiles="true" />

    <!-- Copy over external libraries -->
    <Copy SourceFiles="@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/SalemModLoader/Libs/%(Identity).dll')" DestinationFolder="./libs" Condition="'$(SteamLibraryPath)' != '' And '%(Identity)' != '' And '$(OS)' == 'Windows_NT' And Exists(@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/SalemModLoader/Libs/%(Identity).dll'))" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/TownOfSalem2.app/Contents/SalemModLoader/Libs/%(Identity).dll')" DestinationFolder="./libs" Condition="'$(SteamLibraryPath)' != '' And '%(Identity)' != '' And '$(OS)' != 'Windows_NT' And Exists(@(Reference -> '$(SteamLibraryPath)/steamapps/common/Town of Salem 2/TownOfSalem2.app/Contents/SalemModLoader/Libs/%(Identity).dll'))" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="Copy" AfterTargets="Build" Condition="'$(SteamLibraryPath)' != ''">
		<Copy SourceFiles="$(TargetPath)" DestinationFolder="$(SteamLibraryPath)/steamapps/common/Town of Salem 2/SalemModLoader/Mods"></Copy>
  </Target>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="SET PLUGIN_DIR=&quot;C:\Program Files (x86)\Steam\steamapps\common\Town of Salem 2\SalemModLoader\Mods\&quot;&#xA;&#xA;IF EXIST %25PLUGIN_DIR%25 (&#xA;    ECHO Copying DLLs to Plugins directory...&#xA;    XCOPY /Y /F &quot;$(TargetPath)&quot; %25PLUGIN_DIR%25&#xA;)" />
  </Target>
</Project>